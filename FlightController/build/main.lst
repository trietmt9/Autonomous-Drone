ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB141:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** UART_HandleTypeDef huart2;
  49:Core/Src/main.c **** UART_HandleTypeDef huart6;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_SPI1_Init(void);
  59:Core/Src/main.c **** static void MX_TIM4_Init(void);
  60:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  61:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  62:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   MX_SPI1_Init();
 102:Core/Src/main.c ****   MX_TIM4_Init();
 103:Core/Src/main.c ****   MX_USART1_UART_Init();
 104:Core/Src/main.c ****   MX_USART2_UART_Init();
 105:Core/Src/main.c ****   MX_USART6_UART_Init();
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Infinite loop */
 111:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 112:Core/Src/main.c ****   while (1)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 133:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 136:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 4


 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 156:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 170:Core/Src/main.c ****   * @param None
 171:Core/Src/main.c ****   * @retval None
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c **** static void MX_SPI1_Init(void)
 174:Core/Src/main.c **** {
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 183:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 184:Core/Src/main.c ****   hspi1.Instance = SPI1;
 185:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 186:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 187:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 188:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 189:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 190:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 191:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 192:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 193:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 194:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 195:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 196:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /**
 207:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 208:Core/Src/main.c ****   * @param None
 209:Core/Src/main.c ****   * @retval None
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c **** static void MX_TIM4_Init(void)
 212:Core/Src/main.c **** {
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 219:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 220:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 225:Core/Src/main.c ****   htim4.Instance = TIM4;
 226:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 227:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 228:Core/Src/main.c ****   htim4.Init.Period = 65535;
 229:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 230:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 231:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 232:Core/Src/main.c ****   {
 233:Core/Src/main.c ****     Error_Handler();
 234:Core/Src/main.c ****   }
 235:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 236:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 237:Core/Src/main.c ****   {
 238:Core/Src/main.c ****     Error_Handler();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     Error_Handler();
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 245:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 246:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 251:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 252:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 253:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 254:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c ****     Error_Handler();
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 259:Core/Src/main.c ****   {
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 6


 260:Core/Src/main.c ****     Error_Handler();
 261:Core/Src/main.c ****   }
 262:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****     Error_Handler();
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 273:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim4);
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** }
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** /**
 278:Core/Src/main.c ****   * @brief USART1 Initialization Function
 279:Core/Src/main.c ****   * @param None
 280:Core/Src/main.c ****   * @retval None
 281:Core/Src/main.c ****   */
 282:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 283:Core/Src/main.c **** {
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 292:Core/Src/main.c ****   huart1.Instance = USART1;
 293:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 294:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 295:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 296:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 297:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 298:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 299:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 300:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 301:Core/Src/main.c ****   {
 302:Core/Src/main.c ****     Error_Handler();
 303:Core/Src/main.c ****   }
 304:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /**
 311:Core/Src/main.c ****   * @brief USART2 Initialization Function
 312:Core/Src/main.c ****   * @param None
 313:Core/Src/main.c ****   * @retval None
 314:Core/Src/main.c ****   */
 315:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 316:Core/Src/main.c **** {
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 325:Core/Src/main.c ****   huart2.Instance = USART2;
 326:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 327:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 328:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 329:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 330:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 331:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 332:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 333:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 334:Core/Src/main.c ****   {
 335:Core/Src/main.c ****     Error_Handler();
 336:Core/Src/main.c ****   }
 337:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** }
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** /**
 344:Core/Src/main.c ****   * @brief USART6 Initialization Function
 345:Core/Src/main.c ****   * @param None
 346:Core/Src/main.c ****   * @retval None
 347:Core/Src/main.c ****   */
 348:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
 349:Core/Src/main.c **** {
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
 358:Core/Src/main.c ****   huart6.Instance = USART6;
 359:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 360:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 361:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 362:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 363:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 364:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 365:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 366:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 367:Core/Src/main.c ****   {
 368:Core/Src/main.c ****     Error_Handler();
 369:Core/Src/main.c ****   }
 370:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
 373:Core/Src/main.c **** 
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 8


 374:Core/Src/main.c **** }
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** /**
 377:Core/Src/main.c ****   * @brief GPIO Initialization Function
 378:Core/Src/main.c ****   * @param None
 379:Core/Src/main.c ****   * @retval None
 380:Core/Src/main.c ****   */
 381:Core/Src/main.c **** static void MX_GPIO_Init(void)
 382:Core/Src/main.c **** {
  28              		.loc 1 382 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 28
  35              		.cfi_offset 4, -28
  36              		.cfi_offset 5, -24
  37              		.cfi_offset 6, -20
  38              		.cfi_offset 7, -16
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 9, -8
  41              		.cfi_offset 14, -4
  42 0004 8BB0     		sub	sp, sp, #44
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 72
 383:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 383 3 view .LVU1
  46              		.loc 1 383 20 is_stmt 0 view .LVU2
  47 0006 0024     		movs	r4, #0
  48 0008 0594     		str	r4, [sp, #20]
  49 000a 0694     		str	r4, [sp, #24]
  50 000c 0794     		str	r4, [sp, #28]
  51 000e 0894     		str	r4, [sp, #32]
  52 0010 0994     		str	r4, [sp, #36]
 384:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 385:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 388:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 388 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 388 3 view .LVU4
  56 0012 0194     		str	r4, [sp, #4]
  57              		.loc 1 388 3 view .LVU5
  58 0014 384B     		ldr	r3, .L3
  59 0016 1A6B     		ldr	r2, [r3, #48]
  60 0018 42F00402 		orr	r2, r2, #4
  61 001c 1A63     		str	r2, [r3, #48]
  62              		.loc 1 388 3 view .LVU6
  63 001e 1A6B     		ldr	r2, [r3, #48]
  64 0020 02F00402 		and	r2, r2, #4
  65 0024 0192     		str	r2, [sp, #4]
  66              		.loc 1 388 3 view .LVU7
  67 0026 019A     		ldr	r2, [sp, #4]
  68              	.LBE4:
  69              		.loc 1 388 3 view .LVU8
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 9


 389:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  70              		.loc 1 389 3 view .LVU9
  71              	.LBB5:
  72              		.loc 1 389 3 view .LVU10
  73 0028 0294     		str	r4, [sp, #8]
  74              		.loc 1 389 3 view .LVU11
  75 002a 1A6B     		ldr	r2, [r3, #48]
  76 002c 42F08002 		orr	r2, r2, #128
  77 0030 1A63     		str	r2, [r3, #48]
  78              		.loc 1 389 3 view .LVU12
  79 0032 1A6B     		ldr	r2, [r3, #48]
  80 0034 02F08002 		and	r2, r2, #128
  81 0038 0292     		str	r2, [sp, #8]
  82              		.loc 1 389 3 view .LVU13
  83 003a 029A     		ldr	r2, [sp, #8]
  84              	.LBE5:
  85              		.loc 1 389 3 view .LVU14
 390:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  86              		.loc 1 390 3 view .LVU15
  87              	.LBB6:
  88              		.loc 1 390 3 view .LVU16
  89 003c 0394     		str	r4, [sp, #12]
  90              		.loc 1 390 3 view .LVU17
  91 003e 1A6B     		ldr	r2, [r3, #48]
  92 0040 42F00102 		orr	r2, r2, #1
  93 0044 1A63     		str	r2, [r3, #48]
  94              		.loc 1 390 3 view .LVU18
  95 0046 1A6B     		ldr	r2, [r3, #48]
  96 0048 02F00102 		and	r2, r2, #1
  97 004c 0392     		str	r2, [sp, #12]
  98              		.loc 1 390 3 view .LVU19
  99 004e 039A     		ldr	r2, [sp, #12]
 100              	.LBE6:
 101              		.loc 1 390 3 view .LVU20
 391:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 102              		.loc 1 391 3 view .LVU21
 103              	.LBB7:
 104              		.loc 1 391 3 view .LVU22
 105 0050 0494     		str	r4, [sp, #16]
 106              		.loc 1 391 3 view .LVU23
 107 0052 1A6B     		ldr	r2, [r3, #48]
 108 0054 42F00202 		orr	r2, r2, #2
 109 0058 1A63     		str	r2, [r3, #48]
 110              		.loc 1 391 3 view .LVU24
 111 005a 1B6B     		ldr	r3, [r3, #48]
 112 005c 03F00203 		and	r3, r3, #2
 113 0060 0493     		str	r3, [sp, #16]
 114              		.loc 1 391 3 view .LVU25
 115 0062 049B     		ldr	r3, [sp, #16]
 116              	.LBE7:
 117              		.loc 1 391 3 view .LVU26
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 394:Core/Src/main.c ****   HAL_GPIO_WritePin(NRF_CE_GPIO_Port, NRF_CE_Pin, GPIO_PIN_RESET);
 118              		.loc 1 394 3 view .LVU27
 119 0064 DFF89C90 		ldr	r9, .L3+12
 120 0068 2246     		mov	r2, r4
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 10


 121 006a 1021     		movs	r1, #16
 122 006c 4846     		mov	r0, r9
 123 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 124              	.LVL0:
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 397:Core/Src/main.c ****   HAL_GPIO_WritePin(NRF_nCS_GPIO_Port, NRF_nCS_Pin, GPIO_PIN_RESET);
 125              		.loc 1 397 3 view .LVU28
 126 0072 224F     		ldr	r7, .L3+4
 127 0074 2246     		mov	r2, r4
 128 0076 1021     		movs	r1, #16
 129 0078 3846     		mov	r0, r7
 130 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL1:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 400:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, IMU_nCS_Pin|Baro_nCS_Pin, GPIO_PIN_RESET);
 132              		.loc 1 400 3 view .LVU29
 133 007e 204D     		ldr	r5, .L3+8
 134 0080 2246     		mov	r2, r4
 135 0082 0521     		movs	r1, #5
 136 0084 2846     		mov	r0, r5
 137 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL2:
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /*Configure GPIO pin : NRF_CE_Pin */
 403:Core/Src/main.c ****   GPIO_InitStruct.Pin = NRF_CE_Pin;
 139              		.loc 1 403 3 view .LVU30
 140              		.loc 1 403 23 is_stmt 0 view .LVU31
 141 008a 4FF01008 		mov	r8, #16
 142 008e CDF81480 		str	r8, [sp, #20]
 404:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 143              		.loc 1 404 3 is_stmt 1 view .LVU32
 144              		.loc 1 404 24 is_stmt 0 view .LVU33
 145 0092 0126     		movs	r6, #1
 146 0094 0696     		str	r6, [sp, #24]
 405:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 147              		.loc 1 405 3 is_stmt 1 view .LVU34
 148              		.loc 1 405 24 is_stmt 0 view .LVU35
 149 0096 0794     		str	r4, [sp, #28]
 406:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 150              		.loc 1 406 3 is_stmt 1 view .LVU36
 151              		.loc 1 406 25 is_stmt 0 view .LVU37
 152 0098 0894     		str	r4, [sp, #32]
 407:Core/Src/main.c ****   HAL_GPIO_Init(NRF_CE_GPIO_Port, &GPIO_InitStruct);
 153              		.loc 1 407 3 is_stmt 1 view .LVU38
 154 009a 05A9     		add	r1, sp, #20
 155 009c 4846     		mov	r0, r9
 156 009e FFF7FEFF 		bl	HAL_GPIO_Init
 157              	.LVL3:
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /*Configure GPIO pin : NRF_nCS_Pin */
 410:Core/Src/main.c ****   GPIO_InitStruct.Pin = NRF_nCS_Pin;
 158              		.loc 1 410 3 view .LVU39
 159              		.loc 1 410 23 is_stmt 0 view .LVU40
 160 00a2 CDF81480 		str	r8, [sp, #20]
 411:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 11


 161              		.loc 1 411 3 is_stmt 1 view .LVU41
 162              		.loc 1 411 24 is_stmt 0 view .LVU42
 163 00a6 0696     		str	r6, [sp, #24]
 412:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 412 3 is_stmt 1 view .LVU43
 165              		.loc 1 412 24 is_stmt 0 view .LVU44
 166 00a8 0794     		str	r4, [sp, #28]
 413:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 167              		.loc 1 413 3 is_stmt 1 view .LVU45
 168              		.loc 1 413 25 is_stmt 0 view .LVU46
 169 00aa 0894     		str	r4, [sp, #32]
 414:Core/Src/main.c ****   HAL_GPIO_Init(NRF_nCS_GPIO_Port, &GPIO_InitStruct);
 170              		.loc 1 414 3 is_stmt 1 view .LVU47
 171 00ac 05A9     		add	r1, sp, #20
 172 00ae 3846     		mov	r0, r7
 173 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL4:
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /*Configure GPIO pin : NRF_INT_Pin */
 417:Core/Src/main.c ****   GPIO_InitStruct.Pin = NRF_INT_Pin;
 175              		.loc 1 417 3 view .LVU48
 176              		.loc 1 417 23 is_stmt 0 view .LVU49
 177 00b4 2023     		movs	r3, #32
 178 00b6 0593     		str	r3, [sp, #20]
 418:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 179              		.loc 1 418 3 is_stmt 1 view .LVU50
 180              		.loc 1 418 24 is_stmt 0 view .LVU51
 181 00b8 4FF48818 		mov	r8, #1114112
 182 00bc CDF81880 		str	r8, [sp, #24]
 419:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 183              		.loc 1 419 3 is_stmt 1 view .LVU52
 184              		.loc 1 419 24 is_stmt 0 view .LVU53
 185 00c0 0794     		str	r4, [sp, #28]
 420:Core/Src/main.c ****   HAL_GPIO_Init(NRF_INT_GPIO_Port, &GPIO_InitStruct);
 186              		.loc 1 420 3 is_stmt 1 view .LVU54
 187 00c2 05A9     		add	r1, sp, #20
 188 00c4 3846     		mov	r0, r7
 189 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 190              	.LVL5:
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /*Configure GPIO pins : IMU_nCS_Pin Baro_nCS_Pin */
 423:Core/Src/main.c ****   GPIO_InitStruct.Pin = IMU_nCS_Pin|Baro_nCS_Pin;
 191              		.loc 1 423 3 view .LVU55
 192              		.loc 1 423 23 is_stmt 0 view .LVU56
 193 00ca 0523     		movs	r3, #5
 194 00cc 0593     		str	r3, [sp, #20]
 424:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 195              		.loc 1 424 3 is_stmt 1 view .LVU57
 196              		.loc 1 424 24 is_stmt 0 view .LVU58
 197 00ce 0696     		str	r6, [sp, #24]
 425:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 198              		.loc 1 425 3 is_stmt 1 view .LVU59
 199              		.loc 1 425 24 is_stmt 0 view .LVU60
 200 00d0 0794     		str	r4, [sp, #28]
 426:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 201              		.loc 1 426 3 is_stmt 1 view .LVU61
 202              		.loc 1 426 25 is_stmt 0 view .LVU62
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 12


 203 00d2 0894     		str	r4, [sp, #32]
 427:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 204              		.loc 1 427 3 is_stmt 1 view .LVU63
 205 00d4 05A9     		add	r1, sp, #20
 206 00d6 2846     		mov	r0, r5
 207 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL6:
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /*Configure GPIO pins : IMU_INT_Pin Baro_INT_Pin */
 430:Core/Src/main.c ****   GPIO_InitStruct.Pin = IMU_INT_Pin|Baro_INT_Pin;
 209              		.loc 1 430 3 view .LVU64
 210              		.loc 1 430 23 is_stmt 0 view .LVU65
 211 00dc 40F20243 		movw	r3, #1026
 212 00e0 0593     		str	r3, [sp, #20]
 431:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 213              		.loc 1 431 3 is_stmt 1 view .LVU66
 214              		.loc 1 431 24 is_stmt 0 view .LVU67
 215 00e2 CDF81880 		str	r8, [sp, #24]
 432:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 216              		.loc 1 432 3 is_stmt 1 view .LVU68
 217              		.loc 1 432 24 is_stmt 0 view .LVU69
 218 00e6 0794     		str	r4, [sp, #28]
 433:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 219              		.loc 1 433 3 is_stmt 1 view .LVU70
 220 00e8 05A9     		add	r1, sp, #20
 221 00ea 2846     		mov	r0, r5
 222 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 223              	.LVL7:
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 436:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 437:Core/Src/main.c **** }
 224              		.loc 1 437 1 is_stmt 0 view .LVU71
 225 00f0 0BB0     		add	sp, sp, #44
 226              	.LCFI2:
 227              		.cfi_def_cfa_offset 28
 228              		@ sp needed
 229 00f2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 230              	.L4:
 231 00f6 00BF     		.align	2
 232              	.L3:
 233 00f8 00380240 		.word	1073887232
 234 00fc 00080240 		.word	1073874944
 235 0100 00040240 		.word	1073873920
 236 0104 00000240 		.word	1073872896
 237              		.cfi_endproc
 238              	.LFE141:
 240              		.section	.text.Error_Handler,"ax",%progbits
 241              		.align	1
 242              		.global	Error_Handler
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 247              	Error_Handler:
 248              	.LFB142:
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 13


 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** /* USER CODE END 4 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** /**
 444:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 445:Core/Src/main.c ****   * @retval None
 446:Core/Src/main.c ****   */
 447:Core/Src/main.c **** void Error_Handler(void)
 448:Core/Src/main.c **** {
 249              		.loc 1 448 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ Volatile: function does not return.
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 449:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 450:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 451:Core/Src/main.c ****   __disable_irq();
 255              		.loc 1 451 3 view .LVU73
 256              	.LBB8:
 257              	.LBI8:
 258              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 14


  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 15


  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 16


 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 17


 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 18


 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 19


 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 20


 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 21


 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 22


 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 23


 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 24


 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 25


 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 26


 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 27


 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 28


 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 29


 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 30


 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 259              		.loc 2 960 27 view .LVU74
 260              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 261              		.loc 2 962 3 view .LVU75
 262              		.syntax unified
 263              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 264 0000 72B6     		cpsid i
 265              	@ 0 "" 2
 266              		.thumb
 267              		.syntax unified
 268              	.L6:
 269              	.LBE9:
 270              	.LBE8:
 452:Core/Src/main.c ****   while (1)
 271              		.loc 1 452 3 discriminator 1 view .LVU76
 453:Core/Src/main.c ****   {
 454:Core/Src/main.c ****   }
 272              		.loc 1 454 3 discriminator 1 view .LVU77
 452:Core/Src/main.c ****   while (1)
 273              		.loc 1 452 9 discriminator 1 view .LVU78
 274 0002 FEE7     		b	.L6
 275              		.cfi_endproc
 276              	.LFE142:
 278              		.section	.text.MX_SPI1_Init,"ax",%progbits
 279              		.align	1
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	MX_SPI1_Init:
 285              	.LFB136:
 174:Core/Src/main.c **** 
 286              		.loc 1 174 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI3:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 184:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 295              		.loc 1 184 3 view .LVU80
 184:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 31


 296              		.loc 1 184 18 is_stmt 0 view .LVU81
 297 0002 0D48     		ldr	r0, .L11
 298 0004 0D4B     		ldr	r3, .L11+4
 299 0006 0360     		str	r3, [r0]
 185:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 300              		.loc 1 185 3 is_stmt 1 view .LVU82
 185:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 301              		.loc 1 185 19 is_stmt 0 view .LVU83
 302 0008 4FF48273 		mov	r3, #260
 303 000c 4360     		str	r3, [r0, #4]
 186:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 304              		.loc 1 186 3 is_stmt 1 view .LVU84
 186:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 305              		.loc 1 186 24 is_stmt 0 view .LVU85
 306 000e 0023     		movs	r3, #0
 307 0010 8360     		str	r3, [r0, #8]
 187:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 308              		.loc 1 187 3 is_stmt 1 view .LVU86
 187:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 309              		.loc 1 187 23 is_stmt 0 view .LVU87
 310 0012 C360     		str	r3, [r0, #12]
 188:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 311              		.loc 1 188 3 is_stmt 1 view .LVU88
 188:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 312              		.loc 1 188 26 is_stmt 0 view .LVU89
 313 0014 0361     		str	r3, [r0, #16]
 189:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 314              		.loc 1 189 3 is_stmt 1 view .LVU90
 189:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 315              		.loc 1 189 23 is_stmt 0 view .LVU91
 316 0016 4361     		str	r3, [r0, #20]
 190:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 317              		.loc 1 190 3 is_stmt 1 view .LVU92
 190:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 318              		.loc 1 190 18 is_stmt 0 view .LVU93
 319 0018 4FF40072 		mov	r2, #512
 320 001c 8261     		str	r2, [r0, #24]
 191:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 321              		.loc 1 191 3 is_stmt 1 view .LVU94
 191:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 322              		.loc 1 191 32 is_stmt 0 view .LVU95
 323 001e C361     		str	r3, [r0, #28]
 192:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 324              		.loc 1 192 3 is_stmt 1 view .LVU96
 192:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 325              		.loc 1 192 23 is_stmt 0 view .LVU97
 326 0020 0362     		str	r3, [r0, #32]
 193:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 327              		.loc 1 193 3 is_stmt 1 view .LVU98
 193:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 328              		.loc 1 193 21 is_stmt 0 view .LVU99
 329 0022 4362     		str	r3, [r0, #36]
 194:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 330              		.loc 1 194 3 is_stmt 1 view .LVU100
 194:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 331              		.loc 1 194 29 is_stmt 0 view .LVU101
 332 0024 8362     		str	r3, [r0, #40]
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 32


 195:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 333              		.loc 1 195 3 is_stmt 1 view .LVU102
 195:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 334              		.loc 1 195 28 is_stmt 0 view .LVU103
 335 0026 0A23     		movs	r3, #10
 336 0028 C362     		str	r3, [r0, #44]
 196:Core/Src/main.c ****   {
 337              		.loc 1 196 3 is_stmt 1 view .LVU104
 196:Core/Src/main.c ****   {
 338              		.loc 1 196 7 is_stmt 0 view .LVU105
 339 002a FFF7FEFF 		bl	HAL_SPI_Init
 340              	.LVL8:
 196:Core/Src/main.c ****   {
 341              		.loc 1 196 6 view .LVU106
 342 002e 00B9     		cbnz	r0, .L10
 204:Core/Src/main.c **** 
 343              		.loc 1 204 1 view .LVU107
 344 0030 08BD     		pop	{r3, pc}
 345              	.L10:
 198:Core/Src/main.c ****   }
 346              		.loc 1 198 5 is_stmt 1 view .LVU108
 347 0032 FFF7FEFF 		bl	Error_Handler
 348              	.LVL9:
 349              	.L12:
 350 0036 00BF     		.align	2
 351              	.L11:
 352 0038 00000000 		.word	hspi1
 353 003c 00300140 		.word	1073819648
 354              		.cfi_endproc
 355              	.LFE136:
 357              		.section	.text.MX_TIM4_Init,"ax",%progbits
 358              		.align	1
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	MX_TIM4_Init:
 364              	.LFB137:
 212:Core/Src/main.c **** 
 365              		.loc 1 212 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 56
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 00B5     		push	{lr}
 370              	.LCFI4:
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 14, -4
 373 0002 8FB0     		sub	sp, sp, #60
 374              	.LCFI5:
 375              		.cfi_def_cfa_offset 64
 218:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 376              		.loc 1 218 3 view .LVU110
 218:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 377              		.loc 1 218 26 is_stmt 0 view .LVU111
 378 0004 0023     		movs	r3, #0
 379 0006 0A93     		str	r3, [sp, #40]
 380 0008 0B93     		str	r3, [sp, #44]
 381 000a 0C93     		str	r3, [sp, #48]
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 33


 382 000c 0D93     		str	r3, [sp, #52]
 219:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 383              		.loc 1 219 3 is_stmt 1 view .LVU112
 219:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 384              		.loc 1 219 27 is_stmt 0 view .LVU113
 385 000e 0893     		str	r3, [sp, #32]
 386 0010 0993     		str	r3, [sp, #36]
 220:Core/Src/main.c **** 
 387              		.loc 1 220 3 is_stmt 1 view .LVU114
 220:Core/Src/main.c **** 
 388              		.loc 1 220 22 is_stmt 0 view .LVU115
 389 0012 0193     		str	r3, [sp, #4]
 390 0014 0293     		str	r3, [sp, #8]
 391 0016 0393     		str	r3, [sp, #12]
 392 0018 0493     		str	r3, [sp, #16]
 393 001a 0593     		str	r3, [sp, #20]
 394 001c 0693     		str	r3, [sp, #24]
 395 001e 0793     		str	r3, [sp, #28]
 225:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 396              		.loc 1 225 3 is_stmt 1 view .LVU116
 225:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 397              		.loc 1 225 18 is_stmt 0 view .LVU117
 398 0020 2B48     		ldr	r0, .L31
 399 0022 2C4A     		ldr	r2, .L31+4
 400 0024 0260     		str	r2, [r0]
 226:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 401              		.loc 1 226 3 is_stmt 1 view .LVU118
 226:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 402              		.loc 1 226 24 is_stmt 0 view .LVU119
 403 0026 4360     		str	r3, [r0, #4]
 227:Core/Src/main.c ****   htim4.Init.Period = 65535;
 404              		.loc 1 227 3 is_stmt 1 view .LVU120
 227:Core/Src/main.c ****   htim4.Init.Period = 65535;
 405              		.loc 1 227 26 is_stmt 0 view .LVU121
 406 0028 8360     		str	r3, [r0, #8]
 228:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 407              		.loc 1 228 3 is_stmt 1 view .LVU122
 228:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 408              		.loc 1 228 21 is_stmt 0 view .LVU123
 409 002a 4FF6FF72 		movw	r2, #65535
 410 002e C260     		str	r2, [r0, #12]
 229:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 411              		.loc 1 229 3 is_stmt 1 view .LVU124
 229:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 412              		.loc 1 229 28 is_stmt 0 view .LVU125
 413 0030 0361     		str	r3, [r0, #16]
 230:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 414              		.loc 1 230 3 is_stmt 1 view .LVU126
 230:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 415              		.loc 1 230 32 is_stmt 0 view .LVU127
 416 0032 8361     		str	r3, [r0, #24]
 231:Core/Src/main.c ****   {
 417              		.loc 1 231 3 is_stmt 1 view .LVU128
 231:Core/Src/main.c ****   {
 418              		.loc 1 231 7 is_stmt 0 view .LVU129
 419 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 420              	.LVL10:
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 34


 231:Core/Src/main.c ****   {
 421              		.loc 1 231 6 view .LVU130
 422 0038 0028     		cmp	r0, #0
 423 003a 39D1     		bne	.L23
 235:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 424              		.loc 1 235 3 is_stmt 1 view .LVU131
 235:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 425              		.loc 1 235 34 is_stmt 0 view .LVU132
 426 003c 4FF48053 		mov	r3, #4096
 427 0040 0A93     		str	r3, [sp, #40]
 236:Core/Src/main.c ****   {
 428              		.loc 1 236 3 is_stmt 1 view .LVU133
 236:Core/Src/main.c ****   {
 429              		.loc 1 236 7 is_stmt 0 view .LVU134
 430 0042 0AA9     		add	r1, sp, #40
 431 0044 2248     		ldr	r0, .L31
 432 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 433              	.LVL11:
 236:Core/Src/main.c ****   {
 434              		.loc 1 236 6 view .LVU135
 435 004a 0028     		cmp	r0, #0
 436 004c 32D1     		bne	.L24
 240:Core/Src/main.c ****   {
 437              		.loc 1 240 3 is_stmt 1 view .LVU136
 240:Core/Src/main.c ****   {
 438              		.loc 1 240 7 is_stmt 0 view .LVU137
 439 004e 2048     		ldr	r0, .L31
 440 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 441              	.LVL12:
 240:Core/Src/main.c ****   {
 442              		.loc 1 240 6 view .LVU138
 443 0054 0028     		cmp	r0, #0
 444 0056 2FD1     		bne	.L25
 244:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 445              		.loc 1 244 3 is_stmt 1 view .LVU139
 244:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 446              		.loc 1 244 37 is_stmt 0 view .LVU140
 447 0058 0023     		movs	r3, #0
 448 005a 0893     		str	r3, [sp, #32]
 245:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 449              		.loc 1 245 3 is_stmt 1 view .LVU141
 245:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 450              		.loc 1 245 33 is_stmt 0 view .LVU142
 451 005c 0993     		str	r3, [sp, #36]
 246:Core/Src/main.c ****   {
 452              		.loc 1 246 3 is_stmt 1 view .LVU143
 246:Core/Src/main.c ****   {
 453              		.loc 1 246 7 is_stmt 0 view .LVU144
 454 005e 08A9     		add	r1, sp, #32
 455 0060 1B48     		ldr	r0, .L31
 456 0062 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 457              	.LVL13:
 246:Core/Src/main.c ****   {
 458              		.loc 1 246 6 view .LVU145
 459 0066 48BB     		cbnz	r0, .L26
 250:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 460              		.loc 1 250 3 is_stmt 1 view .LVU146
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 35


 250:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 461              		.loc 1 250 20 is_stmt 0 view .LVU147
 462 0068 6023     		movs	r3, #96
 463 006a 0193     		str	r3, [sp, #4]
 251:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 464              		.loc 1 251 3 is_stmt 1 view .LVU148
 251:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 465              		.loc 1 251 19 is_stmt 0 view .LVU149
 466 006c 0022     		movs	r2, #0
 467 006e 0292     		str	r2, [sp, #8]
 252:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 468              		.loc 1 252 3 is_stmt 1 view .LVU150
 252:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 469              		.loc 1 252 24 is_stmt 0 view .LVU151
 470 0070 0392     		str	r2, [sp, #12]
 253:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 471              		.loc 1 253 3 is_stmt 1 view .LVU152
 253:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 472              		.loc 1 253 24 is_stmt 0 view .LVU153
 473 0072 0592     		str	r2, [sp, #20]
 254:Core/Src/main.c ****   {
 474              		.loc 1 254 3 is_stmt 1 view .LVU154
 254:Core/Src/main.c ****   {
 475              		.loc 1 254 7 is_stmt 0 view .LVU155
 476 0074 01A9     		add	r1, sp, #4
 477 0076 1648     		ldr	r0, .L31
 478 0078 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 479              	.LVL14:
 254:Core/Src/main.c ****   {
 480              		.loc 1 254 6 view .LVU156
 481 007c 00BB     		cbnz	r0, .L27
 258:Core/Src/main.c ****   {
 482              		.loc 1 258 3 is_stmt 1 view .LVU157
 258:Core/Src/main.c ****   {
 483              		.loc 1 258 7 is_stmt 0 view .LVU158
 484 007e 0422     		movs	r2, #4
 485 0080 0DEB0201 		add	r1, sp, r2
 486 0084 1248     		ldr	r0, .L31
 487 0086 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 488              	.LVL15:
 258:Core/Src/main.c ****   {
 489              		.loc 1 258 6 view .LVU159
 490 008a D8B9     		cbnz	r0, .L28
 262:Core/Src/main.c ****   {
 491              		.loc 1 262 3 is_stmt 1 view .LVU160
 262:Core/Src/main.c ****   {
 492              		.loc 1 262 7 is_stmt 0 view .LVU161
 493 008c 0822     		movs	r2, #8
 494 008e 01A9     		add	r1, sp, #4
 495 0090 0F48     		ldr	r0, .L31
 496 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 497              	.LVL16:
 262:Core/Src/main.c ****   {
 498              		.loc 1 262 6 view .LVU162
 499 0096 B8B9     		cbnz	r0, .L29
 266:Core/Src/main.c ****   {
 500              		.loc 1 266 3 is_stmt 1 view .LVU163
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 36


 266:Core/Src/main.c ****   {
 501              		.loc 1 266 7 is_stmt 0 view .LVU164
 502 0098 0C22     		movs	r2, #12
 503 009a 01A9     		add	r1, sp, #4
 504 009c 0C48     		ldr	r0, .L31
 505 009e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 506              	.LVL17:
 266:Core/Src/main.c ****   {
 507              		.loc 1 266 6 view .LVU165
 508 00a2 98B9     		cbnz	r0, .L30
 273:Core/Src/main.c **** 
 509              		.loc 1 273 3 is_stmt 1 view .LVU166
 510 00a4 0A48     		ldr	r0, .L31
 511 00a6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 512              	.LVL18:
 275:Core/Src/main.c **** 
 513              		.loc 1 275 1 is_stmt 0 view .LVU167
 514 00aa 0FB0     		add	sp, sp, #60
 515              	.LCFI6:
 516              		.cfi_remember_state
 517              		.cfi_def_cfa_offset 4
 518              		@ sp needed
 519 00ac 5DF804FB 		ldr	pc, [sp], #4
 520              	.L23:
 521              	.LCFI7:
 522              		.cfi_restore_state
 233:Core/Src/main.c ****   }
 523              		.loc 1 233 5 is_stmt 1 view .LVU168
 524 00b0 FFF7FEFF 		bl	Error_Handler
 525              	.LVL19:
 526              	.L24:
 238:Core/Src/main.c ****   }
 527              		.loc 1 238 5 view .LVU169
 528 00b4 FFF7FEFF 		bl	Error_Handler
 529              	.LVL20:
 530              	.L25:
 242:Core/Src/main.c ****   }
 531              		.loc 1 242 5 view .LVU170
 532 00b8 FFF7FEFF 		bl	Error_Handler
 533              	.LVL21:
 534              	.L26:
 248:Core/Src/main.c ****   }
 535              		.loc 1 248 5 view .LVU171
 536 00bc FFF7FEFF 		bl	Error_Handler
 537              	.LVL22:
 538              	.L27:
 256:Core/Src/main.c ****   }
 539              		.loc 1 256 5 view .LVU172
 540 00c0 FFF7FEFF 		bl	Error_Handler
 541              	.LVL23:
 542              	.L28:
 260:Core/Src/main.c ****   }
 543              		.loc 1 260 5 view .LVU173
 544 00c4 FFF7FEFF 		bl	Error_Handler
 545              	.LVL24:
 546              	.L29:
 264:Core/Src/main.c ****   }
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 37


 547              		.loc 1 264 5 view .LVU174
 548 00c8 FFF7FEFF 		bl	Error_Handler
 549              	.LVL25:
 550              	.L30:
 268:Core/Src/main.c ****   }
 551              		.loc 1 268 5 view .LVU175
 552 00cc FFF7FEFF 		bl	Error_Handler
 553              	.LVL26:
 554              	.L32:
 555              		.align	2
 556              	.L31:
 557 00d0 00000000 		.word	htim4
 558 00d4 00080040 		.word	1073743872
 559              		.cfi_endproc
 560              	.LFE137:
 562              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 563              		.align	1
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 568              	MX_USART1_UART_Init:
 569              	.LFB138:
 283:Core/Src/main.c **** 
 570              		.loc 1 283 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574 0000 08B5     		push	{r3, lr}
 575              	.LCFI8:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 3, -8
 578              		.cfi_offset 14, -4
 292:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 579              		.loc 1 292 3 view .LVU177
 292:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 580              		.loc 1 292 19 is_stmt 0 view .LVU178
 581 0002 0A48     		ldr	r0, .L37
 582 0004 0A4B     		ldr	r3, .L37+4
 583 0006 0360     		str	r3, [r0]
 293:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 584              		.loc 1 293 3 is_stmt 1 view .LVU179
 293:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 585              		.loc 1 293 24 is_stmt 0 view .LVU180
 586 0008 4FF4E133 		mov	r3, #115200
 587 000c 4360     		str	r3, [r0, #4]
 294:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 588              		.loc 1 294 3 is_stmt 1 view .LVU181
 294:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 589              		.loc 1 294 26 is_stmt 0 view .LVU182
 590 000e 0023     		movs	r3, #0
 591 0010 8360     		str	r3, [r0, #8]
 295:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 592              		.loc 1 295 3 is_stmt 1 view .LVU183
 295:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 593              		.loc 1 295 24 is_stmt 0 view .LVU184
 594 0012 C360     		str	r3, [r0, #12]
 296:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 38


 595              		.loc 1 296 3 is_stmt 1 view .LVU185
 296:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 596              		.loc 1 296 22 is_stmt 0 view .LVU186
 597 0014 0361     		str	r3, [r0, #16]
 297:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 598              		.loc 1 297 3 is_stmt 1 view .LVU187
 297:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 599              		.loc 1 297 20 is_stmt 0 view .LVU188
 600 0016 0C22     		movs	r2, #12
 601 0018 4261     		str	r2, [r0, #20]
 298:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 602              		.loc 1 298 3 is_stmt 1 view .LVU189
 298:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 603              		.loc 1 298 25 is_stmt 0 view .LVU190
 604 001a 8361     		str	r3, [r0, #24]
 299:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 605              		.loc 1 299 3 is_stmt 1 view .LVU191
 299:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 606              		.loc 1 299 28 is_stmt 0 view .LVU192
 607 001c C361     		str	r3, [r0, #28]
 300:Core/Src/main.c ****   {
 608              		.loc 1 300 3 is_stmt 1 view .LVU193
 300:Core/Src/main.c ****   {
 609              		.loc 1 300 7 is_stmt 0 view .LVU194
 610 001e FFF7FEFF 		bl	HAL_UART_Init
 611              	.LVL27:
 300:Core/Src/main.c ****   {
 612              		.loc 1 300 6 view .LVU195
 613 0022 00B9     		cbnz	r0, .L36
 308:Core/Src/main.c **** 
 614              		.loc 1 308 1 view .LVU196
 615 0024 08BD     		pop	{r3, pc}
 616              	.L36:
 302:Core/Src/main.c ****   }
 617              		.loc 1 302 5 is_stmt 1 view .LVU197
 618 0026 FFF7FEFF 		bl	Error_Handler
 619              	.LVL28:
 620              	.L38:
 621 002a 00BF     		.align	2
 622              	.L37:
 623 002c 00000000 		.word	huart1
 624 0030 00100140 		.word	1073811456
 625              		.cfi_endproc
 626              	.LFE138:
 628              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 629              		.align	1
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 634              	MX_USART2_UART_Init:
 635              	.LFB139:
 316:Core/Src/main.c **** 
 636              		.loc 1 316 1 view -0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 39


 641              	.LCFI9:
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 3, -8
 644              		.cfi_offset 14, -4
 325:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 645              		.loc 1 325 3 view .LVU199
 325:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 646              		.loc 1 325 19 is_stmt 0 view .LVU200
 647 0002 0A48     		ldr	r0, .L43
 648 0004 0A4B     		ldr	r3, .L43+4
 649 0006 0360     		str	r3, [r0]
 326:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 650              		.loc 1 326 3 is_stmt 1 view .LVU201
 326:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 651              		.loc 1 326 24 is_stmt 0 view .LVU202
 652 0008 4FF4E133 		mov	r3, #115200
 653 000c 4360     		str	r3, [r0, #4]
 327:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 654              		.loc 1 327 3 is_stmt 1 view .LVU203
 327:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 655              		.loc 1 327 26 is_stmt 0 view .LVU204
 656 000e 0023     		movs	r3, #0
 657 0010 8360     		str	r3, [r0, #8]
 328:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 658              		.loc 1 328 3 is_stmt 1 view .LVU205
 328:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 659              		.loc 1 328 24 is_stmt 0 view .LVU206
 660 0012 C360     		str	r3, [r0, #12]
 329:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 661              		.loc 1 329 3 is_stmt 1 view .LVU207
 329:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 662              		.loc 1 329 22 is_stmt 0 view .LVU208
 663 0014 0361     		str	r3, [r0, #16]
 330:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 664              		.loc 1 330 3 is_stmt 1 view .LVU209
 330:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 665              		.loc 1 330 20 is_stmt 0 view .LVU210
 666 0016 0C22     		movs	r2, #12
 667 0018 4261     		str	r2, [r0, #20]
 331:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 668              		.loc 1 331 3 is_stmt 1 view .LVU211
 331:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 669              		.loc 1 331 25 is_stmt 0 view .LVU212
 670 001a 8361     		str	r3, [r0, #24]
 332:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 671              		.loc 1 332 3 is_stmt 1 view .LVU213
 332:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 672              		.loc 1 332 28 is_stmt 0 view .LVU214
 673 001c C361     		str	r3, [r0, #28]
 333:Core/Src/main.c ****   {
 674              		.loc 1 333 3 is_stmt 1 view .LVU215
 333:Core/Src/main.c ****   {
 675              		.loc 1 333 7 is_stmt 0 view .LVU216
 676 001e FFF7FEFF 		bl	HAL_UART_Init
 677              	.LVL29:
 333:Core/Src/main.c ****   {
 678              		.loc 1 333 6 view .LVU217
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 40


 679 0022 00B9     		cbnz	r0, .L42
 341:Core/Src/main.c **** 
 680              		.loc 1 341 1 view .LVU218
 681 0024 08BD     		pop	{r3, pc}
 682              	.L42:
 335:Core/Src/main.c ****   }
 683              		.loc 1 335 5 is_stmt 1 view .LVU219
 684 0026 FFF7FEFF 		bl	Error_Handler
 685              	.LVL30:
 686              	.L44:
 687 002a 00BF     		.align	2
 688              	.L43:
 689 002c 00000000 		.word	huart2
 690 0030 00440040 		.word	1073759232
 691              		.cfi_endproc
 692              	.LFE139:
 694              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 695              		.align	1
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 700              	MX_USART6_UART_Init:
 701              	.LFB140:
 349:Core/Src/main.c **** 
 702              		.loc 1 349 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706 0000 08B5     		push	{r3, lr}
 707              	.LCFI10:
 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 3, -8
 710              		.cfi_offset 14, -4
 358:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 711              		.loc 1 358 3 view .LVU221
 358:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 712              		.loc 1 358 19 is_stmt 0 view .LVU222
 713 0002 0A48     		ldr	r0, .L49
 714 0004 0A4B     		ldr	r3, .L49+4
 715 0006 0360     		str	r3, [r0]
 359:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 716              		.loc 1 359 3 is_stmt 1 view .LVU223
 359:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 717              		.loc 1 359 24 is_stmt 0 view .LVU224
 718 0008 4FF4E133 		mov	r3, #115200
 719 000c 4360     		str	r3, [r0, #4]
 360:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 720              		.loc 1 360 3 is_stmt 1 view .LVU225
 360:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 721              		.loc 1 360 26 is_stmt 0 view .LVU226
 722 000e 0023     		movs	r3, #0
 723 0010 8360     		str	r3, [r0, #8]
 361:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 724              		.loc 1 361 3 is_stmt 1 view .LVU227
 361:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 725              		.loc 1 361 24 is_stmt 0 view .LVU228
 726 0012 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 41


 362:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 727              		.loc 1 362 3 is_stmt 1 view .LVU229
 362:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 728              		.loc 1 362 22 is_stmt 0 view .LVU230
 729 0014 0361     		str	r3, [r0, #16]
 363:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 730              		.loc 1 363 3 is_stmt 1 view .LVU231
 363:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 731              		.loc 1 363 20 is_stmt 0 view .LVU232
 732 0016 0C22     		movs	r2, #12
 733 0018 4261     		str	r2, [r0, #20]
 364:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 734              		.loc 1 364 3 is_stmt 1 view .LVU233
 364:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 735              		.loc 1 364 25 is_stmt 0 view .LVU234
 736 001a 8361     		str	r3, [r0, #24]
 365:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 737              		.loc 1 365 3 is_stmt 1 view .LVU235
 365:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 738              		.loc 1 365 28 is_stmt 0 view .LVU236
 739 001c C361     		str	r3, [r0, #28]
 366:Core/Src/main.c ****   {
 740              		.loc 1 366 3 is_stmt 1 view .LVU237
 366:Core/Src/main.c ****   {
 741              		.loc 1 366 7 is_stmt 0 view .LVU238
 742 001e FFF7FEFF 		bl	HAL_UART_Init
 743              	.LVL31:
 366:Core/Src/main.c ****   {
 744              		.loc 1 366 6 view .LVU239
 745 0022 00B9     		cbnz	r0, .L48
 374:Core/Src/main.c **** 
 746              		.loc 1 374 1 view .LVU240
 747 0024 08BD     		pop	{r3, pc}
 748              	.L48:
 368:Core/Src/main.c ****   }
 749              		.loc 1 368 5 is_stmt 1 view .LVU241
 750 0026 FFF7FEFF 		bl	Error_Handler
 751              	.LVL32:
 752              	.L50:
 753 002a 00BF     		.align	2
 754              	.L49:
 755 002c 00000000 		.word	huart6
 756 0030 00140140 		.word	1073812480
 757              		.cfi_endproc
 758              	.LFE140:
 760              		.section	.text.SystemClock_Config,"ax",%progbits
 761              		.align	1
 762              		.global	SystemClock_Config
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	SystemClock_Config:
 768              	.LFB135:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 769              		.loc 1 126 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 80
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 42


 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773 0000 00B5     		push	{lr}
 774              	.LCFI11:
 775              		.cfi_def_cfa_offset 4
 776              		.cfi_offset 14, -4
 777 0002 95B0     		sub	sp, sp, #84
 778              	.LCFI12:
 779              		.cfi_def_cfa_offset 88
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 780              		.loc 1 127 3 view .LVU243
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 781              		.loc 1 127 22 is_stmt 0 view .LVU244
 782 0004 3422     		movs	r2, #52
 783 0006 0021     		movs	r1, #0
 784 0008 07A8     		add	r0, sp, #28
 785 000a FFF7FEFF 		bl	memset
 786              	.LVL33:
 128:Core/Src/main.c **** 
 787              		.loc 1 128 3 is_stmt 1 view .LVU245
 128:Core/Src/main.c **** 
 788              		.loc 1 128 22 is_stmt 0 view .LVU246
 789 000e 0023     		movs	r3, #0
 790 0010 0293     		str	r3, [sp, #8]
 791 0012 0393     		str	r3, [sp, #12]
 792 0014 0493     		str	r3, [sp, #16]
 793 0016 0593     		str	r3, [sp, #20]
 794 0018 0693     		str	r3, [sp, #24]
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 795              		.loc 1 132 3 is_stmt 1 view .LVU247
 796              	.LBB10:
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 797              		.loc 1 132 3 view .LVU248
 798 001a 0093     		str	r3, [sp]
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 799              		.loc 1 132 3 view .LVU249
 800 001c 1F4A     		ldr	r2, .L57
 801 001e 116C     		ldr	r1, [r2, #64]
 802 0020 41F08051 		orr	r1, r1, #268435456
 803 0024 1164     		str	r1, [r2, #64]
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 804              		.loc 1 132 3 view .LVU250
 805 0026 126C     		ldr	r2, [r2, #64]
 806 0028 02F08052 		and	r2, r2, #268435456
 807 002c 0092     		str	r2, [sp]
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 808              		.loc 1 132 3 view .LVU251
 809 002e 009A     		ldr	r2, [sp]
 810              	.LBE10:
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 811              		.loc 1 132 3 view .LVU252
 133:Core/Src/main.c **** 
 812              		.loc 1 133 3 view .LVU253
 813              	.LBB11:
 133:Core/Src/main.c **** 
 814              		.loc 1 133 3 view .LVU254
 815 0030 0193     		str	r3, [sp, #4]
 133:Core/Src/main.c **** 
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 43


 816              		.loc 1 133 3 view .LVU255
 817 0032 1B49     		ldr	r1, .L57+4
 818 0034 0A68     		ldr	r2, [r1]
 819 0036 22F44042 		bic	r2, r2, #49152
 820 003a 42F48042 		orr	r2, r2, #16384
 821 003e 0A60     		str	r2, [r1]
 133:Core/Src/main.c **** 
 822              		.loc 1 133 3 view .LVU256
 823 0040 0A68     		ldr	r2, [r1]
 824 0042 02F44042 		and	r2, r2, #49152
 825 0046 0192     		str	r2, [sp, #4]
 133:Core/Src/main.c **** 
 826              		.loc 1 133 3 view .LVU257
 827 0048 019A     		ldr	r2, [sp, #4]
 828              	.LBE11:
 133:Core/Src/main.c **** 
 829              		.loc 1 133 3 view .LVU258
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 830              		.loc 1 138 3 view .LVU259
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 831              		.loc 1 138 36 is_stmt 0 view .LVU260
 832 004a 0222     		movs	r2, #2
 833 004c 0792     		str	r2, [sp, #28]
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 834              		.loc 1 139 3 is_stmt 1 view .LVU261
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 835              		.loc 1 139 30 is_stmt 0 view .LVU262
 836 004e 0121     		movs	r1, #1
 837 0050 0A91     		str	r1, [sp, #40]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 838              		.loc 1 140 3 is_stmt 1 view .LVU263
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 839              		.loc 1 140 41 is_stmt 0 view .LVU264
 840 0052 1021     		movs	r1, #16
 841 0054 0B91     		str	r1, [sp, #44]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 842              		.loc 1 141 3 is_stmt 1 view .LVU265
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 843              		.loc 1 141 34 is_stmt 0 view .LVU266
 844 0056 0D92     		str	r2, [sp, #52]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 845              		.loc 1 142 3 is_stmt 1 view .LVU267
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 846              		.loc 1 142 35 is_stmt 0 view .LVU268
 847 0058 0E93     		str	r3, [sp, #56]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 848              		.loc 1 143 3 is_stmt 1 view .LVU269
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 849              		.loc 1 143 30 is_stmt 0 view .LVU270
 850 005a 0823     		movs	r3, #8
 851 005c 0F93     		str	r3, [sp, #60]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 852              		.loc 1 144 3 is_stmt 1 view .LVU271
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 853              		.loc 1 144 30 is_stmt 0 view .LVU272
 854 005e 5A23     		movs	r3, #90
 855 0060 1093     		str	r3, [sp, #64]
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 44


 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 856              		.loc 1 145 3 is_stmt 1 view .LVU273
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 857              		.loc 1 145 30 is_stmt 0 view .LVU274
 858 0062 1192     		str	r2, [sp, #68]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 859              		.loc 1 146 3 is_stmt 1 view .LVU275
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 860              		.loc 1 146 30 is_stmt 0 view .LVU276
 861 0064 1292     		str	r2, [sp, #72]
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 862              		.loc 1 147 3 is_stmt 1 view .LVU277
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 863              		.loc 1 147 30 is_stmt 0 view .LVU278
 864 0066 1392     		str	r2, [sp, #76]
 148:Core/Src/main.c ****   {
 865              		.loc 1 148 3 is_stmt 1 view .LVU279
 148:Core/Src/main.c ****   {
 866              		.loc 1 148 7 is_stmt 0 view .LVU280
 867 0068 07A8     		add	r0, sp, #28
 868 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 869              	.LVL34:
 148:Core/Src/main.c ****   {
 870              		.loc 1 148 6 view .LVU281
 871 006e 80B9     		cbnz	r0, .L55
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 872              		.loc 1 155 3 is_stmt 1 view .LVU282
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 873              		.loc 1 155 31 is_stmt 0 view .LVU283
 874 0070 0F23     		movs	r3, #15
 875 0072 0293     		str	r3, [sp, #8]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 876              		.loc 1 157 3 is_stmt 1 view .LVU284
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 877              		.loc 1 157 34 is_stmt 0 view .LVU285
 878 0074 0221     		movs	r1, #2
 879 0076 0391     		str	r1, [sp, #12]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 880              		.loc 1 158 3 is_stmt 1 view .LVU286
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 881              		.loc 1 158 35 is_stmt 0 view .LVU287
 882 0078 0023     		movs	r3, #0
 883 007a 0493     		str	r3, [sp, #16]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 884              		.loc 1 159 3 is_stmt 1 view .LVU288
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 885              		.loc 1 159 36 is_stmt 0 view .LVU289
 886 007c 4FF48052 		mov	r2, #4096
 887 0080 0592     		str	r2, [sp, #20]
 160:Core/Src/main.c **** 
 888              		.loc 1 160 3 is_stmt 1 view .LVU290
 160:Core/Src/main.c **** 
 889              		.loc 1 160 36 is_stmt 0 view .LVU291
 890 0082 0693     		str	r3, [sp, #24]
 162:Core/Src/main.c ****   {
 891              		.loc 1 162 3 is_stmt 1 view .LVU292
 162:Core/Src/main.c ****   {
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 45


 892              		.loc 1 162 7 is_stmt 0 view .LVU293
 893 0084 02A8     		add	r0, sp, #8
 894 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 895              	.LVL35:
 162:Core/Src/main.c ****   {
 896              		.loc 1 162 6 view .LVU294
 897 008a 20B9     		cbnz	r0, .L56
 166:Core/Src/main.c **** 
 898              		.loc 1 166 1 view .LVU295
 899 008c 15B0     		add	sp, sp, #84
 900              	.LCFI13:
 901              		.cfi_remember_state
 902              		.cfi_def_cfa_offset 4
 903              		@ sp needed
 904 008e 5DF804FB 		ldr	pc, [sp], #4
 905              	.L55:
 906              	.LCFI14:
 907              		.cfi_restore_state
 150:Core/Src/main.c ****   }
 908              		.loc 1 150 5 is_stmt 1 view .LVU296
 909 0092 FFF7FEFF 		bl	Error_Handler
 910              	.LVL36:
 911              	.L56:
 164:Core/Src/main.c ****   }
 912              		.loc 1 164 5 view .LVU297
 913 0096 FFF7FEFF 		bl	Error_Handler
 914              	.LVL37:
 915              	.L58:
 916 009a 00BF     		.align	2
 917              	.L57:
 918 009c 00380240 		.word	1073887232
 919 00a0 00700040 		.word	1073770496
 920              		.cfi_endproc
 921              	.LFE135:
 923              		.section	.text.main,"ax",%progbits
 924              		.align	1
 925              		.global	main
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 930              	main:
 931              	.LFB134:
  77:Core/Src/main.c **** 
 932              		.loc 1 77 1 view -0
 933              		.cfi_startproc
 934              		@ Volatile: function does not return.
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937 0000 08B5     		push	{r3, lr}
 938              	.LCFI15:
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 3, -8
 941              		.cfi_offset 14, -4
  86:Core/Src/main.c **** 
 942              		.loc 1 86 3 view .LVU299
 943 0002 FFF7FEFF 		bl	HAL_Init
 944              	.LVL38:
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 46


  93:Core/Src/main.c **** 
 945              		.loc 1 93 3 view .LVU300
 946 0006 FFF7FEFF 		bl	SystemClock_Config
 947              	.LVL39:
 100:Core/Src/main.c ****   MX_SPI1_Init();
 948              		.loc 1 100 3 view .LVU301
 949 000a FFF7FEFF 		bl	MX_GPIO_Init
 950              	.LVL40:
 101:Core/Src/main.c ****   MX_TIM4_Init();
 951              		.loc 1 101 3 view .LVU302
 952 000e FFF7FEFF 		bl	MX_SPI1_Init
 953              	.LVL41:
 102:Core/Src/main.c ****   MX_USART1_UART_Init();
 954              		.loc 1 102 3 view .LVU303
 955 0012 FFF7FEFF 		bl	MX_TIM4_Init
 956              	.LVL42:
 103:Core/Src/main.c ****   MX_USART2_UART_Init();
 957              		.loc 1 103 3 view .LVU304
 958 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 959              	.LVL43:
 104:Core/Src/main.c ****   MX_USART6_UART_Init();
 960              		.loc 1 104 3 view .LVU305
 961 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 962              	.LVL44:
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 963              		.loc 1 105 3 view .LVU306
 964 001e FFF7FEFF 		bl	MX_USART6_UART_Init
 965              	.LVL45:
 966              	.L60:
 112:Core/Src/main.c ****   {
 967              		.loc 1 112 3 discriminator 1 view .LVU307
 117:Core/Src/main.c ****   /* USER CODE END 3 */
 968              		.loc 1 117 3 discriminator 1 view .LVU308
 112:Core/Src/main.c ****   {
 969              		.loc 1 112 9 discriminator 1 view .LVU309
 970 0022 FEE7     		b	.L60
 971              		.cfi_endproc
 972              	.LFE134:
 974              		.global	huart6
 975              		.section	.bss.huart6,"aw",%nobits
 976              		.align	2
 979              	huart6:
 980 0000 00000000 		.space	72
 980      00000000 
 980      00000000 
 980      00000000 
 980      00000000 
 981              		.global	huart2
 982              		.section	.bss.huart2,"aw",%nobits
 983              		.align	2
 986              	huart2:
 987 0000 00000000 		.space	72
 987      00000000 
 987      00000000 
 987      00000000 
 987      00000000 
 988              		.global	huart1
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 47


 989              		.section	.bss.huart1,"aw",%nobits
 990              		.align	2
 993              	huart1:
 994 0000 00000000 		.space	72
 994      00000000 
 994      00000000 
 994      00000000 
 994      00000000 
 995              		.global	htim4
 996              		.section	.bss.htim4,"aw",%nobits
 997              		.align	2
 1000              	htim4:
 1001 0000 00000000 		.space	72
 1001      00000000 
 1001      00000000 
 1001      00000000 
 1001      00000000 
 1002              		.global	hspi1
 1003              		.section	.bss.hspi1,"aw",%nobits
 1004              		.align	2
 1007              	hspi1:
 1008 0000 00000000 		.space	88
 1008      00000000 
 1008      00000000 
 1008      00000000 
 1008      00000000 
 1009              		.text
 1010              	.Letext0:
 1011              		.file 3 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 1012              		.file 4 "C:\\ST\\STM32CubeCLT_1.15.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 1013              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1014              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1015              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1016              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1017              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1018              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1019              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1020              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1021              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1022              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1023              		.file 15 "Core/Inc/main.h"
 1024              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1025              		.file 17 "<built-in>"
ARM GAS  C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:233    .text.MX_GPIO_Init:000000f8 $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:241    .text.Error_Handler:00000000 $t
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:247    .text.Error_Handler:00000000 Error_Handler
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:279    .text.MX_SPI1_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:284    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:352    .text.MX_SPI1_Init:00000038 $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:1007   .bss.hspi1:00000000 hspi1
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:358    .text.MX_TIM4_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:363    .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:557    .text.MX_TIM4_Init:000000d0 $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:1000   .bss.htim4:00000000 htim4
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:563    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:568    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:623    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:993    .bss.huart1:00000000 huart1
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:629    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:634    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:689    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:986    .bss.huart2:00000000 huart2
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:695    .text.MX_USART6_UART_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:700    .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:755    .text.MX_USART6_UART_Init:0000002c $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:979    .bss.huart6:00000000 huart6
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:761    .text.SystemClock_Config:00000000 $t
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:767    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:918    .text.SystemClock_Config:0000009c $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:924    .text.main:00000000 $t
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:930    .text.main:00000000 main
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:976    .bss.huart6:00000000 $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:983    .bss.huart2:00000000 $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:990    .bss.huart1:00000000 $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:997    .bss.htim4:00000000 $d
C:\Users\pc\AppData\Local\Temp\cc1YnXsZ.s:1004   .bss.hspi1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
